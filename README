These are just quick cookbooks that can be used with Vagrant.

1) Install and setup Vagrant with a base box.

2) Get egra (https://github.com/mikeymckay/egra)

3) Get egra-cookbooks (https://github.com/jeffrafter/egra-cookbooks)

4) Setup a Vagrantfile inside of egra

      Vagrant::Config.run do |config|
        # All Vagrant configuration is done here. The most common configuration
        # options are documented and commented below. For a complete reference,
        # please see the online documentation at vagrantup.com.

        # Every Vagrant virtual environment requires a box to build off of.
        config.vm.box = "base"

        # The url from where the 'config.vm.box' box will be fetched if it
        # doesn't already exist on the user's system.
        config.vm.box_url = "http://files.vagrantup.com/lucid32.box"

        # Boot with a GUI so you can see the screen. (Default is headless)
        # config.vm.boot_mode = :gui

        # Assign this VM to a host only network IP, allowing you to access it
        # via the IP.
        config.vm.network "33.33.33.10"

        # Forward a port from the guest to the host, which allows for outside
        # computers to access the VM, whereas host only networking does not.
        config.vm.forward_port "http", 80, 1234

        # Enable provisioning with chef solo, specifying a cookbooks path (relative
        # to this Vagrantfile), and adding some recipes and/or roles.
        config.vm.provision :chef_solo do |chef|
          chef.cookbooks_path = "../egra-cookbook"
          chef.add_recipe "egra"
        end

        # In order for nfs to work, you have to install nfsd locally, on OSX 
        # This is there by default. On windows, nfs shares won't work
        config.vm.share_folder("egra-public", "/srv/egra", ".", :nfs => true)

      end

5) Run the following

      vagrant up

6) Wait about 7 minutes. From then on use vagrant reload.

7) You should now have a box running node, nginx, npm, and coffee-script. It should be auto-compiling your .coffees.
